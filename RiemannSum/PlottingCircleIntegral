import os
# Using Manim Community!!! (v 0.18.0)
from manim import *
from math import sqrt

def upper_circle_equation(x):
    return sqrt(1 - x**2)


def lower_circle_equation(x):
    return -sqrt(1 - x**2)


class MyPlotScene(Scene):
    def construct(self):
        # Create axes
        ax = Axes(x_range=[-1.0, 1.0], 
                  x_length=10,
                  y_range=[-1.0, 1.0],
                  y_length=10,
                  tips=False)
        
        # Plotting half-circle
        upper_half_circle = ax.plot(upper_circle_equation, 
                                    x_range=[-1, 1, 0.001],
                                    color=RED)
        self.add(ax, upper_half_circle)
        
        # Riemann Sum Frames
        infinitesimals = [0.5, 0.3, 0.1, 0.05, 0.025, 0.001]
        riemann_sum_frames = [
            ax.get_riemann_rectangles(upper_half_circle,
                                      x_range=[-1, 1],
                                       stroke_width=0.1,
                                      # stroke_color=WHITE,
                                      color=BLUE,
                                      fill_opacity=0.5,
                                      dx=infinitesimal,
                                      )
            for infinitesimal in infinitesimals]
        riemann_sum_plots = VGroup(*riemann_sum_frames)
        
        # Plotting Riemann Sum: plot first frame, then transform to next ones
        # first_frame = riemann_sum_plots[0]
        for k in range(1, len(riemann_sum_frames)):
            previous_frame = riemann_sum_frames[k-1]
            next_frame = riemann_sum_frames[k]
            self.play(Transform(first_frame, next_frame), run_time=1)
            self.wait(0.5)

# Does require some fine-tuning! Don't just use blindly, check Manim's parameters!!
if __name__ == "__main__":
    os.system(r"python -m manim PlottingCircle.py")
